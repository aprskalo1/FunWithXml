// <auto-generated />
using System;
using FunWithXml_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FunWithXml_API.Migrations
{
    [DbContext(typeof(FunWithXmlDbContext))]
    [Migration("20240415202900_db_refactor")]
    partial class db_refactor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FunWithXml_API.Models.BodyMeasurement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<float>("Ank_di")
                        .HasColumnType("real");

                    b.Property<float>("Ank_gi")
                        .HasColumnType("real");

                    b.Property<float>("Bia_di")
                        .HasColumnType("real");

                    b.Property<float>("Bic_gi")
                        .HasColumnType("real");

                    b.Property<float>("Bii_di")
                        .HasColumnType("real");

                    b.Property<float>("Bit_di")
                        .HasColumnType("real");

                    b.Property<float>("Cal_gi")
                        .HasColumnType("real");

                    b.Property<float>("Che_de")
                        .HasColumnType("real");

                    b.Property<float>("Che_di")
                        .HasColumnType("real");

                    b.Property<float>("Che_gi")
                        .HasColumnType("real");

                    b.Property<float>("Elb_di")
                        .HasColumnType("real");

                    b.Property<float>("For_gi")
                        .HasColumnType("real");

                    b.Property<float>("Hgt")
                        .HasColumnType("real");

                    b.Property<float>("Hip_gi")
                        .HasColumnType("real");

                    b.Property<float>("Kne_di")
                        .HasColumnType("real");

                    b.Property<float>("Kne_gi")
                        .HasColumnType("real");

                    b.Property<float>("Nav_gi")
                        .HasColumnType("real");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<float>("Sho_gi")
                        .HasColumnType("real");

                    b.Property<float>("Thi_gi")
                        .HasColumnType("real");

                    b.Property<float>("Wai_gi")
                        .HasColumnType("real");

                    b.Property<float>("Wgt")
                        .HasColumnType("real");

                    b.Property<float>("Wri_di")
                        .HasColumnType("real");

                    b.Property<float>("Wri_gi")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("BodyMeasurements");
                });
#pragma warning restore 612, 618
        }
    }
}
